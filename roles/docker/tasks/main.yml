---
- name: 'Install docker: step1'
  become: true
  get_url: 
    url: https://get.docker.com/
    dest: /tmp/install_docker.sh
    mode: 555

- name: Check docker 
  become: true
  stat:
    path: /lib/systemd/system/docker.service
  register: docker_status

- name: 'Install docker: step2'
  become: true
  command: /tmp/install_docker.sh
  when: docker_status.stat.exists == False

- name: 'Add user to docker group'
  become: true
  user: 
    name: ubuntu
    groups: docker
    append: yes
  when: docker_status.stat.exists == False

- name: 'Configure docker: reset'
  become: true
  lineinfile:
    dest: '/lib/systemd/system/docker.service'
    regexp: '^ExecStart.*'
    line: 'ExecStart=/usr/bin/dockerd -H fd://'
    state: present

- name: 'Configure docker: userland-proxy'
  become: true
  replace:
    dest: '/lib/systemd/system/docker.service'
    regexp: '^ExecStart=/usr/bin/dockerd'
    replace: 'ExecStart=/usr/bin/dockerd --userland-proxy=false'

- debug:
    msg: "docker MTU: {{net_mtu | default('Not specified')}}"

- name: 'Configure docker: mtu'
  become: true
  replace:
    dest: '/lib/systemd/system/docker.service'
    regexp: '^ExecStart=/usr/bin/dockerd'
    replace: 'ExecStart=/usr/bin/dockerd --mtu {{net_mtu}}'
  when: not((net_mtu is undefined) or (net_mtu is none) or (net_mtu | trim == ''))

- name: Reload docker unit
  become: true
  shell: systemctl daemon-reload

- name: Restart docker
  become: true
  shell: systemctl restart docker

- name: 'Install pip'
  become: true
  apt:
    name: python-pip
    state: present

- name: 'upgrade pip'
  pip:
    name: pip
    extra_args: --upgrade

- name: 'Install docker-py'
  pip:
    name: docker-py
    state: present