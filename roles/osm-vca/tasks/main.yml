---
- debug:
    msg: "OSM-VCA MTU: {{net_mtu | default('Not specified')}}"

- name: Install juju
  become: yes
  apt:
    name: juju
    update_cache: yes

- name: Check env
  become: no
  shell: juju show-controller {{juju_env_name}}
  ignore_errors: True
  register: env_exists

- name: Configure LXD (step 1)
  become: yes
  shell: > 
    systemctl restart lxd;
    lxd init --auto;
    lxd waitready;
    systemctl stop lxd-bridge;
    systemctl --system daemon-reload;
  when: env_exists.rc != 0

- name: Copy LXD config
  become: yes
  copy:
    src: ./files/lxd-bridge
    dest: /etc/default/lxd-bridge
    mode: 0655
  when: env_exists.rc != 0

- name: Configure LXD (step 2)
  become: no
  shell: "lxc profile device set default eth0 mtu {{net_mtu}}"
  when: env_exists.rc != 0 and not((net_mtu is undefined) or (net_mtu is none) or (net_mtu | trim == ''))

- name: Configure LXD (step 3)
  become: yes
  shell: > 
    systemctl enable lxd-bridge;
    systemctl restart lxd-bridge;
  when: env_exists.rc != 0    

- name: Download lxc ubuntu image (step 4)
  become: no
  shell: > 
    lxc image copy ubuntu:16.04 local: --alias ubuntu-xenial;
  when: env_exists.rc != 0

- name: Bootstrap juju
  become: no
  shell: "juju bootstrap localhost {{juju_env_name}}"
  when: env_exists.rc != 0  

- name: Read juju password
  become: no
  shell: "juju show-controller {{juju_env_name}} --show-password | grep password | awk '{print $2}'"
  register: juju_password

- name: Read juju ip
  become: no
  shell: "juju show-controller {{juju_env_name}} | grep api-endpoint | awk '{print $2}' | cut -d : -f1 | cut -d\\' -f2"
  register: juju_ip

- name: Export credentials
  set_fact:
    vca_user: "admin"
    vca_password: "{{ juju_password.stdout.strip() }}"
    juju_ip_address: "{{ juju_ip.stdout.strip() }}"

- name: Setup JUJU nat
  become: yes
  iptables: 
    table: nat
    chain: PREROUTING
    protocol: tcp
    match: tcp
    destination_port: 17070
    to_destination: "{{juju_ip_address.split(':')[0]}}"
    jump: DNAT
    comment: Redirect JUJU traffic

- name: Store IP tables rule to /etc/rc.local
  become: yes
  lineinfile:
    state: present
    path: /etc/rc.local
    insertbefore: 'exit 0'
    line: "iptables -t nat -A PREROUTING -p tcp -m tcp --dport 17070 -m comment --comment 'Redirect JUJU traffic' -j DNAT --to-destination {{juju_ip_address.split(':')[0]}}"
  